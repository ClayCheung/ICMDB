# Generated by Django 2.1.4 on 2019-02-23 08:30

import assets.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type', models.CharField(choices=[('server', '服务器'), ('networkdevice', '网络设备'), ('storagedevice', '存储设备')], default='server', max_length=64, verbose_name='资产类型')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='资产名称')),
                ('sysname', models.CharField(max_length=64, verbose_name='sysname')),
                ('vender', models.CharField(blank=True, max_length=32, null=True, verbose_name='设备厂商')),
                ('model', models.CharField(blank=True, max_length=128, null=True, verbose_name='设备型号')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
            ],
            options={
                'verbose_name': '资产总表',
                'verbose_name_plural': '资产总表',
                'ordering': ['-c_time'],
            },
        ),
        migrations.CreateModel(
            name='CableTableFille',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=assets.models.basefile_directory_path)),
                ('name', models.CharField(max_length=64)),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
            ],
            options={
                'verbose_name': '布线表',
                'verbose_name_plural': '布线表',
                'ordering': ['-c_time'],
            },
        ),
        migrations.CreateModel(
            name='DescFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=assets.models.descFile_directory_path)),
                ('name', models.CharField(max_length=64)),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
            ],
            options={
                'verbose_name': '网络设备描述配置',
                'verbose_name_plural': '网络设备描述配置',
                'ordering': ['-c_time'],
            },
        ),
        migrations.CreateModel(
            name='Locate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=10, verbose_name='数据中心')),
                ('machine_room', models.CharField(max_length=10, verbose_name='机房')),
                ('cabinet', models.CharField(max_length=2, verbose_name='机柜')),
                ('cabinet_num', models.CharField(max_length=2, verbose_name='机柜号')),
            ],
            options={
                'verbose_name': '设备位置',
                'verbose_name_plural': '设备位置',
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_asset_type', models.SmallIntegerField(choices=[(0, '交换机'), (1, '防火墙'), (2, '负载均衡器'), (3, 'SAN交换机'), (4, '路由器')], default=0, verbose_name='网络设备类型')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset')),
            ],
            options={
                'verbose_name': '网络设备',
                'verbose_name_plural': '网络设备',
            },
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speed', models.SmallIntegerField(blank=True, choices=[(1, 'G'), (10, 'XG'), (40, '40G'), (100, '100G'), (None, None)], default=None, null=True, verbose_name='端口速率')),
                ('chassisNum', models.SmallIntegerField(blank=True, default=None, null=True, verbose_name='机框号')),
                ('slotNum', models.SmallIntegerField(blank=True, default=None, null=True, verbose_name='板卡槽位号')),
                ('subSlotNum', models.SmallIntegerField(blank=True, default=None, null=True, verbose_name='子板卡槽位号')),
                ('portNum', models.CharField(max_length=16, verbose_name='端口号')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset')),
                ('remotePort', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='assets.Port')),
            ],
            options={
                'verbose_name': '端口名',
                'verbose_name_plural': '端口名',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='项目名')),
                ('department', models.CharField(blank=True, max_length=20, null=True, verbose_name='业务归属科室')),
                ('system', models.CharField(blank=True, max_length=20, null=True, verbose_name='所属业务系统')),
                ('module', models.CharField(blank=True, max_length=20, null=True, verbose_name='所属业务模块')),
                ('platform', models.CharField(blank=True, max_length=20, null=True, verbose_name='所属业务平台')),
                ('company', models.CharField(blank=True, max_length=20, null=True, verbose_name='所属业务公司')),
                ('administrator', models.CharField(blank=True, max_length=32, null=True, verbose_name='项目管理员')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset')),
            ],
            options={
                'verbose_name': '服务器',
                'verbose_name_plural': '服务器',
            },
        ),
        migrations.CreateModel(
            name='StorDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Asset')),
            ],
            options={
                'verbose_name': '存储设备',
                'verbose_name_plural': '存储设备',
            },
        ),
        migrations.AddField(
            model_name='descfile',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Project'),
        ),
        migrations.AddField(
            model_name='cabletablefille',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.Project'),
        ),
        migrations.AddField(
            model_name='asset',
            name='locate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.Locate', verbose_name='所在位置'),
        ),
        migrations.AddField(
            model_name='asset',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='assets.Project', verbose_name='所属项目'),
        ),
        migrations.AlterUniqueTogether(
            name='port',
            unique_together={('asset', 'speed', 'chassisNum', 'slotNum', 'subSlotNum', 'portNum')},
        ),
    ]
